-
	// Expects variables metric, score, submetrics, [user_vote], [transaction_id]
	rubric = metric
	rubric_score = score
	rubric_user_vote = user_vote || {}
	value = rubric_score.display || 0

form
	each submetric, i in submetrics
		-
			submetric_id = submetric.id
			title = submetric.options['title'] || ""
			html = submetric.type.render_display({
				transaction_id: transaction_id,
				metric: submetric,
				input_name: 'submetric-' + submetric_id,
				user_vote: rubric_user_vote[submetric_id],
				score: rubric_score.data ? rubric.data[submetric_id] : {},
			});

		div.submetric(id="submetric-" + submetric_id, data-id= submetric_id)
			strong.title= title
			| !{html}

	div.rubric-meta
		if transaction_id
			input(type="submit", value="Submit")
			button.reset(type="button")= "Reset"
		span.rubric-score(title="Average")= value

if transaction_id
	script(type="text/javascript", src="/javascripts/metric-rubric.js")