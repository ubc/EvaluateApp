
mixin step( i, icon, name, user_vote )
	if i > 0
		- // TODO: Consider implementing this state info?
		- icon_state = 'up' // ( i <= user_vote ) ? 'up' : 'empty'

		span.vote
			label
				input(
					name = name
					type = 'radio'
					value = i
					checked = ( user_vote === i )
					data-previous = ( user_vote == i ? "true" : "false" )
					autocomplete = "off"
					disabled = ( transaction_id == null )
				)
				+step( i - 1, icon, name, user_vote )
				i(class='icon-'+icon+'-'+icon_state)

-
	// Expects variables metric, score, [user_vote], [transaction_id], [input_name]
	name = input_name || 'metric-' + metric.metric_id
	options = metric.options
	icon = options['icon']
	max = options['max']
	display = score.display

if icon === 'slider'
	label.vote
		input(
			name = name
			type = 'range'
			min = '0'
			step = '1'
			max = max
			value = user_vote
			autocomplete = "off"
			disabled = ( transaction_id == null )
		)
	-// TODO: Create an automatically updating display of which number is being selected by the slider.
else if icon == 'numeric'
	label.vote
		input(
			name = name
			type = 'text'
			size = max.toString().length
			value = user_vote
			placeholder = '0'
			autocomplete = "off"
			disabled = ( transaction_id == null )
		)
		span= " / " + max + " -"
else
	+step(max, icon, name, user_vote)

span.score(title="Average")
	| #{display}

-//link(rel="stylesheet", href="/stylesheets/metric-slider.css")
