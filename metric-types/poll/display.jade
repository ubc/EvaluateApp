-
	// Expects variables metric, score, [user_vote], [transaction_id], [name]
	name = input_name || 'metric-' + metric.metric_id
	options = metric.options || {}
	answers = options['answers'] ? options['answers'].split( /\r?\n/ ) : []
	multiselect = options['multiselect'] || false
	total_votes = score.count || 0
	votes = score.data || {}

ul
	each text, i in answers
		- vote_count = votes[i] || 0
		- user_selected = ( user_vote instanceof Array ? user_vote.indexOf(i) > -1 : user_vote === i )
		li
			label.vote
				input(
					name = name
					type = ( multiselect == 'on' ? 'checkbox' : 'radio' )
					value = i
					checked = ( user_selected )
					autocomplete = "off"
					disabled = ( transaction_id == null )
				)
				span
					| #{text}
			span.score(class="score-" + i, title="Total")
				| #{vote_count}
			br
			progress(
				class = "score-" + i
				max = total_votes
				value = vote_count
			)

script.
	jQuery('.metric-poll').on( 'evaluate-update', function( event, data, choice ) {
		for ( var k in data.score_data ) {
			var value = data.score_data[k];
			var score = jQuery( 'span.score-' + k );
			var progress = jQuery( 'progress.score-' + k )

			score.text( value );
			progress.attr( 'value', value );
			progress.attr( 'max', data.total );
		}

		if ( data.vote != choice ) {
			jQuery( 'input[value="' + data.vote + '"]' ).prop( 'checked', true );
		}

		// Prevent the default evaluate-update event
		event.stopImmediatePropagation();
	} );
